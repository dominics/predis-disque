#!/usr/bin/env bash

set -e
set -x
set -o pipefail

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source ${DIR}/_common

rm -rf ${DIR}/../build/ready

RUN_ID=$(date +%Y%m%d%H%M%S)
BUILD_DIR="${DIR}/../build/${RUN_ID}"
BIND=${DISQUE_SERVER_HOST:-127.0.0.1}

mkdir -p $BUILD_DIR

readonly PORT_1=${DISQUE_SERVER_PORT:-7711}
readonly PORT_2=$(($PORT_1+1))
readonly PORT_3=$(($PORT_1+2))

${DISQUE_SERVER} \
    --port $PORT_1 \
    --cluster-config-file $BUILD_DIR/nodes-$PORT_1.conf \
    --bind ${BIND} > $BUILD_DIR/server.$RUN_ID.1.log 2>&1 &
readonly SERVER_PID_1=$!

${DISQUE_SERVER} \
    --port $PORT_2 \
    --cluster-config-file $BUILD_DIR/nodes-$PORT_2.conf \
    --bind ${BIND} > $BUILD_DIR/server.$RUN_ID.2.log 2>&1 &
readonly SERVER_PID_2=$!

${DISQUE_SERVER} \
    --port $PORT_3 \
    --cluster-config-file $BUILD_DIR/nodes-$PORT_3.conf \
    --bind ${BIND} > $BUILD_DIR/server.$RUN_ID.3.log 2>&1 &
readonly SERVER_PID_3=$!

function finish {
  set +e
  echo "Shutting down..." >&2

  sleep 5

  echo "Running flushall and cluster reset across nodes..." >&2

  echo "CLUSTER RESET" | ${DISQUE} -h $BIND -p ${PORT_1}
  echo "DEBUG FLUSHALL" | ${DISQUE} -h $BIND -p ${PORT_1}

  echo "CLUSTER RESET" | ${DISQUE} -h $BIND -p ${PORT_2}
  echo "DEBUG FLUSHALL" | ${DISQUE} -h $BIND -p ${PORT_2}

  echo "CLUSTER RESET" | ${DISQUE} -h $BIND -p ${PORT_3}
  echo "DEBUG FLUSHALL" | ${DISQUE} -h $BIND -p ${PORT_3}

  echo "Killing PIDs..." >&2

  if [[ -n $SERVER_PID_1 ]]; then
    kill $SERVER_PID_1 > /dev/null 2>&1 || true
  fi
  if [[ -n $SERVER_PID_2 ]]; then
    kill $SERVER_PID_2 > /dev/null 2>&1 || true
  fi
  if [[ -n $SERVER_PID_3 ]]; then
    kill $SERVER_PID_3 > /dev/null 2>&1 || true
  fi

  echo "Done shutting down." >&2
}

trap finish EXIT

echo "Starting run $RUN_ID"
echo "Started disque nodes on ports { $PORT_1, $PORT_2, $PORT_3 }"
echo "Servers are { $SERVER_PID_1, $SERVER_PID_2, $SERVER_PID_3 }"

sleep 1

echo "Introducing..."
${DISQUE} -p $PORT_1 cluster reset
${DISQUE} -p $PORT_1 cluster leaving no
${DISQUE} -p $PORT_1 cluster meet $BIND $PORT_2
${DISQUE} -p $PORT_1 cluster meet $BIND $PORT_3

${DISQUE} -p $PORT_2 cluster reset
${DISQUE} -p $PORT_2 cluster leaving no
${DISQUE} -p $PORT_2 cluster meet $BIND $PORT_1
${DISQUE} -p $PORT_2 cluster meet $BIND $PORT_3

${DISQUE} -p $PORT_3 cluster reset
${DISQUE} -p $PORT_3 cluster leaving no
${DISQUE} -p $PORT_3 cluster meet $BIND $PORT_1
${DISQUE} -p $PORT_3 cluster meet $BIND $PORT_2

set +e

TEST_QUEUE="test_queue_$RANDOM"
TEST_JOB="{\"some\":\"job-$RANDOM\"}"

echo "Adding jobs to all 3 running nodes"
${DISQUE} -h $BIND -p $PORT_1 ADDJOB ${TEST_QUEUE} ${TEST_JOB} 10000
${DISQUE} -h $BIND -p $PORT_2 ADDJOB ${TEST_QUEUE} ${TEST_JOB} 10000
${DISQUE} -h $BIND -p $PORT_3 ADDJOB ${TEST_QUEUE} ${TEST_JOB} 10000

sleep 5

echo "Adding jobs to all 3 running nodes"
${DISQUE} -h $BIND -p $PORT_1 ADDJOB ${TEST_QUEUE} ${TEST_JOB} 10000
${DISQUE} -h $BIND -p $PORT_2 ADDJOB ${TEST_QUEUE} ${TEST_JOB} 10000
${DISQUE} -h $BIND -p $PORT_3 ADDJOB ${TEST_QUEUE} ${TEST_JOB} 10000

echo "Signalling ready"
touch ${DIR}/../build/ready

echo "Waiting for shutdown signal"
wait
